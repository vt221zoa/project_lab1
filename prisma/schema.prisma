generator client {
  provider      = "prisma-client-js"
  output        = "../src/generated/prisma"
  binaryTargets = ["native", "debian-openssl-3.0.x", "rhel-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// Користувачі
model User {
  /// Ідентифікатор користувача
  id        String   @id @default(cuid())
  /// Унікальна почта користувача
  email     String   @unique
  /// Пароль користувача
  password  String
  /// Ім'я користувача
  name      String   @unique
  /// Ззображення користувача
  imageUrl  String?
  /// Чи є адміном користувач?
  isAdmin   Boolean  @default(false)
  /// Коли створений користувач?
  createdAt DateTime @default(now())

  UserMangaList UserMangaList[]
  UserAnimeList UserAnimeList[]
}

/// Аніме
model Anime {
  /// Ідентифікатор аніме
  id            Int                 @id @default(autoincrement())
  /// Назва аніме українською
  titleUa       String?             @unique
  /// Назва аніме англійською
  titleEn       String              @unique
  /// Назва аніме японською
  titleJp       String?             @unique
  /// Опис аніме
  description   String?
  /// Віковий рейтинг аніме
  rating        String?
  /// Тип аніме (TV-серіал, Фільм і тощо)
  kind          String
  /// Кількість випущених серій в епізоді
  episodes      Int?
  /// Статус аніме (онгоїнг, вийшло, ще випускається)
  status        String
  /// Коли створене аніме
  dateRelease   DateTime?
  /// Зображення аніме в URL
  imageUrl      String?
  /// Студія яка виробляла це аніме
  studioId      Int?
  studio        Studio?             @relation(fields: [studioId], references: [id])
  genres        AnimeGenreOnAnime[]
  UserAnimeList UserAnimeList[]
}

/// Манга
model Manga {
  /// Ідентифікатор манги
  id            Int                 @id @default(autoincrement())
  /// Назва манги українською
  titleUa       String?             @unique
  /// Назва манги англійскьою
  titleEn       String              @unique
  /// Назва манги японською
  titleJp       String?             @unique
  /// Опис манги
  description   String?
  /// Тип манги (Манга, Манхва і тощо)
  kind          String
  /// Кількість розділів в творі
  chapters      Int?
  /// Кількість томів в творі
  volumes       Int?
  /// Дата релізу манги
  dateRelease   DateTime?
  /// Статус манги (Видається, Видано і тощо)
  status        String
  /// Зображення манги
  imageUrl      String?
  /// Видавництва які випускають мангу
  publisherId   Int?
  publisher     Publisher?          @relation(fields: [publisherId], references: [id])
  genres        MangaGenreOnManga[]
  UserMangaList UserMangaList[]
}

/// Жанри аніме
model Genre {
  id     Int                 @id @default(autoincrement())
  /// Назва жанру
  name   String              @unique
  nameEn String?             @unique
  animes AnimeGenreOnAnime[]
  mangas MangaGenreOnManga[]
}

/// Зв'язки аніме та жанрів
model AnimeGenreOnAnime {
  animeId Int
  genreId Int
  anime   Anime @relation(fields: [animeId], references: [id])
  genre   Genre @relation(fields: [genreId], references: [id])

  @@id([animeId, genreId])
}

/// Зв'язки манги та жанрів
model MangaGenreOnManga {
  mangaId Int
  genreId Int
  genre   Genre @relation(fields: [genreId], references: [id])
  manga   Manga @relation(fields: [mangaId], references: [id])

  @@id([mangaId, genreId])
}

/// Студія
model Studio {
  /// Ідентифікатор студії
  id      Int     @id @default(autoincrement())
  /// Назва студії
  name    String  @unique
  /// Зображення студії
  logoUrl String?
  animes  Anime[]
}

/// Видавництва
model Publisher {
  /// Ідентифікатор видавництва
  id     Int     @id @default(autoincrement())
  /// Назва видавництва
  name   String  @unique
  mangas Manga[]
}

model UserAnimeList {
  userId  String
  animeId Int
  user    User   @relation(fields: [userId], references: [id])
  anime   Anime  @relation(fields: [animeId], references: [id])

  /// Статус перегляду
  status          String
  /// Коментар
  comment         String?
  /// Оцінка (1-10)
  score           Int?
  /// Кількість переглянутих епізодів
  episodesWatched Int     @default(0)

  @@id([userId, animeId])
}

model UserMangaList {
  userId  String
  mangaId Int
  user    User   @relation(fields: [userId], references: [id])
  manga   Manga  @relation(fields: [mangaId], references: [id])

  /// Статус читання
  status       String
  /// Коментар
  comment      String?
  /// Оцінка
  score        Int?
  /// Кількість прочитаних розділів
  chaptersRead Int     @default(0)
  volumesRead  Int     @default(0)

  @@id([userId, mangaId])
}
